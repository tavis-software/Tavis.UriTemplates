name: Build and Test

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      solutionName: UriTemplates.sln
      outputFolder: ./buildArtifacts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3
        with:
          submodules: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore ${{ env.solutionName }}

      - name: Check formatting
        run: dotnet format --check --verbosity diagnostic

      - name: Build
        run: dotnet build ${{ env.solutionName }} --no-restore -c Release

      - name: Test
        run: dotnet test ${{ env.solutionName }} --no-build --verbosity normal -c Release /p:CollectCoverage=true /p:CoverletOutput=./TestResults/ /p:CoverletOutputFormat=opencover

      - name: Pack
        run: dotnet pack ${{ env.solutionName }} /p:IncludeSymbols=true /p:SymbolPackageFormat=snupkg --no-build --output ${{ env.outputFolder }} -c Release

      - name: Upload Nuget Package and Symbols
        uses: actions/upload-artifact@v3
        with:
          name: drop
          path: |
            ${{ env.outputFolder }}/*.nupkg
            ${{ env.outputFolder }}/*.snupkg

  deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    environment:
      name: production
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: 6.0.x
          
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: drop
      
      - name: Nuget push
        run: dotnet nuget push "*.nupkg" --skip-duplicate -s https://api.nuget.org/v3/index.json -k ${{ secrets.PUBLISH_GH_TOKEN }}
      
